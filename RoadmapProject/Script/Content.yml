
# ^ - at the end means "essential topic"
# RESOURCES - keyword for marking resources section, nested subcategories are not supported, e.g. DON'T write "- Books: \n    - 2014:"

- iOS Developer^:
    - RESOURCES:
        - Articles:
            - "How to become an iOS developer": "https://badootech.badoo.com/how-to-become-an-ios-developer-91aaa4719a91"
    - Practical knowledge^:
        - RESOURCES:
            - Articles:
                - "How to become a professional iOS developer": "http://roadfiresoftware.com/2014/04/how-to-become-a-professional-ios-developer/"
        - Getting started:
            - RESOURCES:
                - Tutorials:
                    - "Jump Right In": "https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/"
                    - "Raywenderlich.com": "https://www.raywenderlich.com/"
            - First pet project ideas:
                - RESOURCES:
                    - Articles:
                        - "So You Want To Make iPhone Apps? 10 Projects For Beginners": "https://www.makeuseof.com/tag/want-make-iphone-apps-6-projects-beginners/"
                    - Github:
                        - "awesome-app-ideas": "https://github.com/tastejs/awesome-app-ideas"
        - Languages^:
            - RESOURCES:
                - Articles:
                    - "Should You Learn Swift or Objective-C?": "http://blog.teamtreehouse.com/learn-swift-or-objective-c"
            - Objective-C^:
                - RESOURCES:
                  - Books:
                      - "Effective Objective-C 2.0: 52 Specific Ways to Improve Your IOS and OS X Programs": "https://www.amazon.co.uk/Effective-Objective-C-2-0-Specific-Development/dp/0321917014"
                  - Blogs:
                      - "NSBlog": "https://www.mikeash.com/pyblog/"
                      - "objc.io": "https://www.objc.io/"
                - Blocks^:
                    - RESOURCES:
                        - Articles:
                            - "Friday Q&A 2009-08-14: Practical Blocks": "https://www.mikeash.com/pyblog/friday-qa-2009-08-14-practical-blocks.html"
                        - Cheat sheet:
                            - "How Do I Declare A Block in Objective-C?": "http://fuckingblocksyntax.com/"
                    - Memory Management:   
                        - RESOURCES:
                            - Articles:
                                - "How blocks are implemented (and the consequences)": "https://www.cocoawithlove.com/2009/10/how-blocks-are-implemented-and.html"
                - KVC:
                    - RESOURCES:
                        - Articles:
                            - "About Key-Value Coding": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueCoding/index.html"
                            - "Friday Q&A 2013-02-08: Let's Build Key-Value Coding": "https://www.mikeash.com/pyblog/friday-qa-2013-02-08-lets-build-key-value-coding.html"
                - KVO:
                    - RESOURCES:
                        - Articles:
                            - "Introduction to Key-Value Observing Programming Guide": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html"
                            - "Key-Value Observing": http://nshipster.com/key-value-observing/"
                - Toll-free bridging:
                    - RESOURCES:
                        - Articles:
                            - "Friday Q&A 2010-01-22: Toll Free Bridging Internals": "https://www.mikeash.com/pyblog/friday-qa-2010-01-22-toll-free-bridging-internals.html"
                            - "TOLL-FREE BRIDGING AND UNMANAGED": "http://en.swifter.tips/toll-free/"
                - Runtime^:
                    - RESOURCES:
                        - Articles:
                            - "Objective-C Runtime Programming Guide": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Introduction/Introduction.html"
                    - Method messaging:
                        - RESOURCES:
                            - Articles:
                                - "How Objective-C messaging works": "http://dantoml.com/how-objective-c-messaging-works/"
                                - "Friday Q&A 2009-03-20: Objective-C Messaging": "https://www.mikeash.com/pyblog/friday-qa-2009-03-20-objective-c-messaging.html"
                    - NSZombies and KVO implementation:
                        - RESOURCES:
                            - Articles:
                                - "KVO Implementation Official Documentation": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueObserving/Articles/KVOImplementation.html"
                                - "KVO Implementation Analysis By MikeAsh": "https://www.mikeash.com/pyblog/friday-qa-2009-01-23.html"
                                - "KVO Implementation Demo": "https://github.com/okcomp/ImplementKVO"

                    - Swizzling:
                        - RESOURCES:
                            - Articles:
                                - "Method Swizzling": "http://nshipster.com/method-swizzling/"
            - Swift^:
                - RESOURCES:
                    - Books:
                        - "The Swift Programming Language": "https://itunes.apple.com/gb/book/the-swift-programming-language-swift-4-0-3/id881256329"
                        - "Advanced Swift": "https://www.objc.io/books/advanced-swift/"
                        - "Swift Apprentice": "https://store.raywenderlich.com/products/swift-apprentice?_ga=2.74566868.712179774.1519384552-896491817.1510924963"
                    - Blogs:
                        - "SWIFT BY SUNDELL": "https://www.swiftbysundell.com/"
                        - "SWIFTER": "http://en.swifter.tips"
                - Closures:
                    - RESOURCES:
                        - Articles:
                            - "The Swift Programming Language: Closures": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html"
                        - Cheat sheet:
                            - "How Do I Declare a Closure in Swift?": "http://fuckingclosuresyntax.com/"
                - Initializers^:
                    - RESOURCES:
                        - Articles:
                            - "Initialization In Depth, Part 1/2": "https://www.raywenderlich.com/119922/swift-tutorial-initialization-part-1"
                            - "Initialization In Depth, Part 2/2": "https://www.raywenderlich.com/121603/swift-tutorial-initialization-part-2"
                - Generics:
                    - RESOURCES:
                        - Articles:
                            - "Generics in Swift 4": "https://medium.com/developermind/generics-in-swift-4-4f802cd6f53c"
                            - "Swift Generics Tutorial: Getting Started": "https://www.raywenderlich.com/154371/swift-generics-tutorial-getting-started"
                            - "The Swift Programming Language: Generics": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html"
                - Protocols^:
                    - RESOURCES:
                        - Articles:
                            - "Separation of concerns using protocols in Swift": "https://www.swiftbysundell.com/posts/separation-of-concerns-using-protocols-in-swift"
                            - "Replacing legacy code using Swift protocols": https://www.swiftbysundell.com/posts/replacing-legacy-code-using-swift-protocols
                            - "Swift Optional Protocol Methods": "https://useyourloaf.com/blog/swift-optional-protocol-methods/"
                            - "The Swift Programming Language: Protocols": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html"
                - Structs^:
                    - RESOURCES:
                        - Articles:
                            - "The Swift Programming Language: Classes and Structures": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html"
                - Enums^:
                    - RESOURCES:
                        - Articles:
                            - "The Swift Programming Language: Enumerations": "https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html"
                - Runtime:
                    - RESOURCES:
                        - Articles:
                            - "How does iOS Swift Runtime work": "https://stackoverflow.com/questions/37315295/how-does-ios-swift-runtime-work"
                    - Method dispatch:
                        - RESOURCES:
                            - Articles:
                                - "Method Dispatch in Swift": "https://www.raizlabs.com/dev/2016/12/swift-method-dispatch/"
        - Memory management^:
            - RESOURCES:
                - Articles:
                    - "About Memory Management": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html"
                - Quora:
                    - "How do reference counting and garbage collection compare?": "https://www.quora.com/How-do-reference-counting-and-garbage-collection-compare"
            - Stack and Heap^:
                - RESOURCES:
                    - Articles:
                        - "Stack and Heap Objects in Objective-C": "https://www.mikeash.com/pyblog/friday-qa-2010-01-15-stack-and-heap-objects-in-objective-c.html"
            - Value vs Reference type^:
                - RESOURCES:
                    - Articles:
                        - "Swift Blog: Value and Reference Types": "https://developer.apple.com/swift/blog/?id=10"
                        - "Value and Reference Types": "https://thatthinginswift.com/value-and-reference-types/"
            - MRC:
                - RESOURCES:
                    - Articles:
                        - "Memory Management Tutorial for iOS": "https://www.raywenderlich.com/2657/memory-management-tutorial-for-ios"
            - ARC^:
                - RESOURCES:
                    - Articles:
                        - "Beginning ARC in iOS 5 Tutorial Part 1": "https://www.raywenderlich.com/5677/beginning-arc-in-ios-5-part-1"
                - Weak references:
                    - RESOURCES:
                        - Articles:
                            - "Friday Q&A 2015-12-11: Swift Weak References": "https://www.mikeash.com/pyblog/friday-qa-2015-12-11-swift-weak-references.html"
            - Retain cycles^:
                - RESOURCES:
                    - Articles:
                        - "Retain Cycles, Weak and Unowned in Swift": "http://www.thomashanning.com/retain-cycles-weak-unowned-swift/"
            - Garbage collection:
                - RESOURCES:
                    - Quora:
                        - "How does garbage collection happen in iOS?": "https://www.quora.com/How-does-garbage-collection-happen-in-iOS"
            - Memory leaks^:
                - RESOURCES:
                    - Articles:
                        - "Swift’s ARC and Memory Leaks": "https://medium.com/ios-seminar/swifts-arc-and-memory-leaks-1a227cae55da"
            - Shallow and deep copying:
                - RESOURCES:
                    - Articles:
                        - "Object copying": "https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/ObjectCopying.html"
            - Autorelease pool:
                - RESOURCES:
                    - Articles:
                        - "@AUTORELEASEPOOL": "http://en.swifter.tips/autoreleasepool/"
        - Multithreading and concurency^:
            - RESOURCES:
                - Articles:
                        - "Parallel programming with Swift: Basics": "https://medium.com/flawless-app-stories/basics-of-parallel-programming-with-swift-93fee8425287"
                        - "Concurrent Programming": "https://www.objc.io/issues/2-concurrency/"
            - POSIX and NSThreads:
                - RESOURCES:
                    - Articles:
                        - "Multithreading: CreatingThreads": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/CreatingThreads/CreatingThreads.html"
            - Perform selector family:
                - RESOURCES:
                    - Articles:
                        - "performSelector may cause a leak because its selector is unknown": "https://stackoverflow.com/questions/7017281/performselector-may-cause-a-leak-because-its-selector-is-unknown"
                        - "Alternatives to performSelector": "http://codeshaker.blogspot.co.uk/2012/05/alternatives-to-performselector.html"    
            - GCD^:
                - RESOURCES:
                    - Articles:
                        - "Grand Central Dispatch In-Depth: Part 1/2": "https://www.raywenderlich.com/60749/grand-central-dispatch-in-depth-part-1"
                    - Courses:
                        - "Grand Central Dispatch GCD": "https://eg.udacity.com/course/grand-central-dispatch-gcd--ud576"
            - NSOperation(Queue)^:
                - RESOURCES:
                    - Articles:
                        - "NSOperation": "http://nshipster.com/nsoperation/" 
            - Runloop^:
                - RESOURCES:
                    - Articles:
                        - "Run Loops": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/RunLoopManagement/RunLoopManagement.html"
            - Synchronization^:
                - RESOURCES:
                    - Articles:
                        - "Synchronization": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/ThreadSafety/ThreadSafety.html"
            - Problems:
                - RESOURCES:
                    - Articles:
                        - "Multithreading: Common Pitfalls": "https://austingwalters.com/multithreading-common-pitfalls/"
                - Race condition:
                    - RESOURCES:
                        - Articles:
                            - "Avoiding Race Conditions": "https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Articles/RaceConditions.html"
                - Deadlock:
                    - RESOURCES:
                        - Articles:
                            - "Avoiding deadlocks and latency in libdispatch": "https://www.cocoawithlove.com/2010/06/avoiding-deadlocks-and-latency-in.html"
                - Readers–writers problem:
                    - RESOURCES:
                        - Articles:
                            - "Wiki: Readers–writers problem": "https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem"
                            - "Dispatch Barriers in Swift 3": "https://medium.com/@oyalhi/dispatch-barriers-in-swift-3-6c4a295215d6"    
        - Cocoa Touch^:
            - RESOURCES:
                - Articles:
                    - "Cocoa (Touch)": "https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/Cocoa.html"
            - UIKit^:
                - RESOURCES:
                    - Articles:
                        - "UIKit Framework": "https://developer.apple.com/documentation/uikit"
                        - "How to make friends with UIKit": "https://badootech.badoo.com/how-to-make-friends-with-uikit-934ea431ffef"
                    - Courses:
                        - "UIKit fundamentals": "https://eg.udacity.com/course/uikit-fundamentals--ud788"
                - UIApplication^:
                    - RESOURCES:
                        - Articles:
                            - "Managing Your App's Life Cycle": "https://developer.apple.com/documentation/uikit/core_app/managing_your_app_s_life_cycle"
                            - "UIApplication": "https://developer.apple.com/documentation/uikit/uiapplication"
                    - States^:
                        - RESOURCES:
                            - Articles:
                                - "The App Life Cycle": "https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/TheAppLifeCycle/TheAppLifeCycle.html"
                    - UIApplicationDelegate:
                        - RESOURCES:
                            - Articles:
                                - "UIApplicationDelegate": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate"
                - UIViews^:
                    - RESOURCES:
                        - Articles:
                            - "UIView Fundamentals": "https://www.weheartswift.com/uiview-fundamentals/"
                    - UITableViews^:
                        - RESOURCES:
                            - Articles:
                                - "Clean Table View Code": "https://www.objc.io/issues/1-view-controllers/table-views/" 
                    - UICollectionViews^:
                        - RESOURCES:
                            - Articles:
                                - "Custom Collection View Layouts": "https://www.objc.io/issues/3-views/collection-view-layouts/"
                - Layers:
                    - RESOURCES:
                        - Articles:
                            - "CALayer Tutorial for iOS: Getting Started": "https://www.raywenderlich.com/169004/calayer-tutorial-ios-getting-started"
                - Layout^:
                    - RESOURCES:
                        - Articles:
                            - "Demystifying iOS Layout": "http://tech.gc.com/demystifying-ios-layout/"
                    - Frame-based^:
                        - RESOURCES:
                            - Articles:
                                - "CGGeometry": "http://nshipster.com/cggeometry/"
                    - Autolayout^:
                        - RESOURCES:
                            - Articles:
                                - "The Ultimate Guide To IOS AutoLayout": "https://digitalleaves.com/ultimate-guide-autolayout/"
                                - "Understanding Autolayout Constraints In Depth": "https://medium.com/@ravi.aggarwal61/understanding-auto-layout-constraints-part-1-844474e81d1e"
                        - UIStackView:
                            - RESOURCES:
                                - Articles:
                                    - "Introduction To UIStackView": "https://www.raywenderlich.com/160646/uistackview-tutorial-introducing-stack-views-2"
                - Animations:
                    - RESOURCES:
                        - Articles:
                            - "objc.io Animations": "https://www.objc.io/issues/12-animations/"
                - Transform:
                    - RESOURCES:
                        - Articles:
                            - "Understanding UIView’s transform property (part 1)": "https://ninjapro.wordpress.com/2016/08/23/understanding-uiviews-transform-property-part-1/"
                            - "Understanding UIView’s transform property (final)": "https://ninjapro.wordpress.com/2016/08/27/understanding-uiviews-transform-property-final-part/"
                - Navigation^:
                    - RESOURCES:
                        - Articles:
                            - "Improve your iOS Architecture with FlowControllers": "http://merowing.info/2016/01/improve-your-ios-architecture-with-flowcontrollers/"
                            - "Screen navigation in iOS": "https://badootech.badoo.com/screen-navigation-in-ios-dd99b09228b2"
                - UIViewController^:
                    - RESOURCES:
                        - Articles:
                            - "The Role of View Controllers": "https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/"
                    - Lifecycle^:
                        - RESOURCES:
                            - Articles:
                                - "Understand the View Controller Lifecycle": "https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/WorkWithViewControllers.html"
            - Foundation^:
                - RESOURCES:
                    - Articles:
                        - "Foundation Framework": "https://developer.apple.com/documentation/foundation"
                - Notifications vs Delegation vs Observing^:
                    - RESOURCES:
                        - Articles:
                            - "WHEN TO USE DELEGATION, NOTIFICATION, OR OBSERVATION IN IOS": "https://shinesolutions.com/2011/06/14/delegation-notification-and-observation/"
                - Collections:
                    - RESOURCES:
                        - Articles:
                            - "The Foundation Collection Classes": "https://www.objc.io/issues/7-foundation/collections/"
                - Networking^:
                    - RESOURCES:
                        - Articles:
                            - "A Crash Course on Networking in iOS": "https://www.sitepoint.com/a-crash-course-on-networking-in-ios/"
                - Serialization^:
                    - RESOURCES:
                        - Articles:
                            - "Encoding, Decoding and Serialization in Swift 4": "https://www.raywenderlich.com/172145/encoding-decoding-and-serialization-in-swift-4"
                    - NSCoding:
                        - RESOURCES:
                            - Articles:
                                - "NSCoding / NSKeyed​Archiver": "http://nshipster.com/nscoding/"
                    - Codable^:
                        - RESOURCES:
                            - Articles:
                                - "Swift Codability": "https://medium.com/@ravi.aggarwal61/swift-codability-d0d232065cad"
                    - JSON^:
                        - RESOURCES:
                            - Articles:
                                - "Swift Blog: Working with JSON in Swift": "https://developer.apple.com/swift/blog/?id=37"
                    - XML:
                        - RESOURCES:
                            - Articles:
                                - "A Beginner’s Guide to XML Parsing in Swift": "http://leaks.wanari.com/2016/08/24/xml-parsing-swift/"
                    - Protobuf:
                        - RESOURCES:
                            - Articles:
                                - "Introduction to Protocol Buffers on iOS": "https://www.raywenderlich.com/149335/introduction-protocol-buffers-ios"
            - UserNotifications:
                - RESOURCES:
                    - Articles:
                        - "UserNotifications in Swift 3 (Part 1)": "https://medium.com/yay-its-erica/usernotifications-in-swift-3-part-1-d250e54440c1"
            - Core Location:
                - RESOURCES:
                    - Articles: 
                        - "iOS Location Tracking": "https://badootech.badoo.com/ios-location-tracking-aac4e2323629"
            - Core Motion:
                - RESOURCES:
                    - Documentation: 
                        - "Core Motion": "https://developer.apple.com/documentation/coremotion"
                    - WWDC:
                        - "Health and Fitness with Core Motion": "https://developer.apple.com/videos/play/wwdc2016/713/"
                        - "Creating Immersive Apps with Core Motion": "https://developer.apple.com/videos/play/wwdc2017/704/"
            - Work in background mode^:
                - RESOURCES:
                    - Articles:
                        - "Background Modes Tutorial: Getting Started": "https://www.raywenderlich.com/143128/background-modes-tutorial-getting-started"
        - Software Architecture^:
            - Design Patterns^:
                - Cocoa^:
                    - RESOURCES:
                        - Articles:
                            - "Cocoa Design Patterns": "https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaDesignPatterns/CocoaDesignPatterns.html"
                            - "Collection for Design Patterns in Swift": "https://medium.com/swiftworld/collection-for-design-patterns-in-swift-67265359aa47"
                    - Abstract Factory:
                        - Class cluster:
                                - RESOURCES:
                                    - Articles:
                                        - "Class Clusters": "https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW34"
                    - Adapter:
                    - Command Pattern:
                    - Chain of Responsibility:
                    - Decorator:
                        - Delegation:
                        - Categories:
                    - Facade:
                    - Memento:
                    - Observer:
                    - Proxy:
                    - Receptionist:
                    - Singleton:
                    - Template Method:
                    - MVC:
                - Architectural^:
                    - RESOURCES:
                        - Articles:
                            - "iOS Architecture Patterns": "https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52"
                            - "Designing iOS architecture: Motivation": "https://medium.com/@borlov/e984e4ebba4a"
                            - "Designing iOS architecture: Checklist": "https://github.com/BohdanOrlov/architecture-checklist"
                    - MVC^:
                        - RESOURCES:
                            - Slides:
                                - "Stanford MVC": "https://web.stanford.edu/class/cs75n/1_MVC.pdf"
                            - Articles:
                                - "Do MVC like it’s 1979": "https://badootech.badoo.com/do-mvc-like-its-1979-da62304f6568"
                    - MVVM^:
                        - RESOURCES:
                            - Articles:
                                - "Introduction to MVVM": "https://www.objc.io/issues/13-architecture/mvvm/"
                    - MVP^:
                    - Clean architecture^:
                        - RESOURCES:
                            - Examples:
                                - "Clean architecture with RxSwift": "https://github.com/sergdort/CleanArchitectureRxSwift"
                        - VIPER:
                            - RESOURCES:
                                - Articles:
                                    - "Architecting iOS Apps with VIPER": "https://www.objc.io/issues/13-architecture/viper/"
                                - Books:
                                    - "The Book of VIPER": "https://github.com/strongself/The-Book-of-VIPER"
                        - RIBs:
                            - RESOURCES:
                                - Articles:
                                    - "RIBs": "https://eng.uber.com/new-rider-app/"
                    - Coordinators:
                        - RESOURCES:
                            - Articles:
                                - "Coordinators Redux": "http://khanlou.com/2015/10/coordinators-redux/"
                                - "Advanced Coordinators": "http://khanlou.com/tag/advanced-coordinators/"
                - Creational^:
                    - Factory:
                    - Abstract Factory:
                    - Builder:
                    - Factory Method:
                    - Object Pool:
                    - Prototype:
                    - Singleton:
                        - RESOURCES:
                            - Articles:
                                - "Singletons": "https://thatthinginswift.com/singletons/"
                - Structural^:
                    - Adapter:
                    - Bridge:
                    - Composite:
                    - Decorator:
                    - Facade:
                    - Flyweight:
                    - Proxy:
                - Behavioural^:
                    - Command:
                    - Chain of responsibility:
                    - Interpreter:
                    - Iterator:
                    - Mediator:
                    - Memento:
                    - Observer:
                    - State:
                    - Strategy:
                    - Visitor:
                - Concurrency:
                    - Anti-pattern:
            - Design Principles^:
                - SOLID^:
                    - RESOURCES:
                        - Articles:
                            - "SOLID (object-oriented design)": https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
                - Inversion of Control^:
                    - Dependency Injection^:
                        - RESOURCES:
                            - Articles:
                                - "Dependency Injection": "https://www.objc.io/issues/15-testing/dependency-injection/"
                    - Service Locator:
                - Protocol-Oriented Programming:
                    - RESOURCES:
                        - Articles:
                            - "Protocol Oriented Programming in Swift: An Introduction": "https://www.appcoda.com/protocol-oriented-programming/"
                        - WWDC:
                            - "Protocol-Oriented Programming in Swift": "https://developer.apple.com/videos/play/wwdc2015/408/"
            - Object-Oriented Programming:
            - Functional programming:
                - Functional Reactive Programming Frameworks:
                  - React Native:
                  - RxSwift:
                      - RESOURCES:
                          - Articles:
                              - "Interactive diagrams of Rx Observables": "http://rxmarbles.com"
                          - Videos:
                              - "Learning Path: RxSwift from Start to Finish": "https://academy.realm.io/posts/learning-path-rxswift-from-start-to-finish/"
                  - RxRealm, RxDataSources:
        - Dependencies management^:
            - Cocoapods:
                - RESOURCES:
                    - Articles:
                        - "CocoaPods Tutorial for Swift: Getting Started": "https://www.raywenderlich.com/156971/cocoapods-tutorial-swift-getting-started"
            - Carthage:
                - RESOURCES:
                    - Articles:
                        - "Carthage Tutorial: Getting Started": "https://www.raywenderlich.com/165660/carthage-tutorial-getting-started-2"
            - Swift Package Manager:
                - RESOURCES:
                    - Websites:
                        - "Swift Package Manager": "https://swift.org/package-manager/"
        - Project structure and File/Group organisation:
        - Version Control Systems^:
            - Git^:
                - RESOURCES:
                    - Websites:
                        - "git - the simple guide": "http://rogerdudler.github.io/git-guide/"
                        - "git": "https://git-scm.com"
                    - Books:
                        - "Pro Git": "https://git-scm.com/book/en/v2"
        - Debugging:
            - Instruments:
                - RESOURCES:
                    - Articles:
                        - "Instruments Tutorial with Swift: Getting Started": "https://www.raywenderlich.com/166125/instruments-tutorial-swift-getting-started"
            - Best practices:
                - Checklists:
        - UX:
        - Caching and Persistency^:
            - Core Data:
                - RESOURCES:
                    - Articles:
                        - "Core Data Programming Guide": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/index.html#//apple_ref/doc/uid/TP40001075-CH2-SW1"
                        - "Core Data from Scratch: Concurrency": "https://code.tutsplus.com/tutorials/core-data-from-scratch-concurrency--cms-22131"
            - Realm:
                - RESOURCES:
                    - Websites:
                        - "Realm": "https://realm.io/docs/swift/latest"
            - YAPDatabase:
        - Testing^:
            - Unit Tests^:
                - RESOURCES:
                    - Articles:
                        - "iOS Unit Testing and UI Testing Tutorial": "https://www.raywenderlich.com/150073/ios-unit-testing-and-ui-testing-tutorial"
                        - "Singleton, Service Locator and tests in iOS": "https://badootech.badoo.com/singleton-service-locator-and-tests-in-ios-d69484e88944"
                        - "Unit testing asynchronous Swift code": "https://www.swiftbysundell.com/posts/unit-testing-asynchronous-swift-code"
            - Snapshot Tests:
            - Functional test:
            - TDD:
                - RESOURCES:
                    - Articles:
                        - "The Three Laws of TDD": "http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd"
            - BDD:
                - RESOURCES:
                    - Articles:
                        - "Behavior-Driven Testing Tutorial for iOS with Quick & Nimble": "https://www.raywenderlich.com/182118/behavior-driven-testing-tutorial-ios-quick-nimble"
        - Performance optimization:
            - Increase FPS:
            - Decrease memory footprint:
        - Code signing:
        - Tools:
            - IDE:
                - Xcode:
                    - Interface Builder:
                        - RESOURCES:
                            - Articles:
                                - "iOS User Interfaces: Storyboards vs. NIBs vs. Custom Code": "https://www.toptal.com/ios/ios-user-interfaces-storyboards-vs-nibs-vs-custom-code"
            - Swiftlint:
            - Sourcery:
            - Fastlane:
                - RESOURCES:
                    - Articles:
                        - "fastlane Tutorial: Getting Started": "https://www.raywenderlich.com/136168/fastlane-tutorial-getting-started-2"
                    - Websites:
                        - "Fastlane": "https://fastlane.tools"
        - Continuous Integration:
            - Jenkins:
            - Xcode server:
        - Security:
            - Keychain:
                - RESOURCES:
                    - Articles:
                        - "Basic iOS Security: Keychain and Hashing": https://www.raywenderlich.com/185370/basic-ios-security-keychain-hashing
            - Security Transforms API:
        - tvOS:
            - Focus interactions:
                - RESOURCES:
                    - Articles:
                        - "Focus-Driven Interfaces with UIKit": "https://developer.apple.com/videos/play/techtalks-apple-tv/3/"
        - WatchKit:
    - Computer Science knowledge^:
        - Algorithms^:
            - RESOURCES:
                - Websites:
                    - "Swift Algorithm Club": "https://github.com/raywenderlich/swift-algorithm-club"
                - Courses:
                    - "Algorithms Specialization": "https://www.coursera.org/specializations/algorithms"
                - Practice:
                    - "HackerRank": "https://www.hackerrank.com/dashboard"
                    - "LeetCode": "https://leetcode.com/explore/"
                    - "topcoder": "https://www.topcoder.com/member-onboarding/learning-practicing-skills/"
            - Sorting^:
            - Graph Theory^:
                - Trees:
            - Strings^:
                - RESOURCES:
                    - Articles:
                        - "Swift Algorithm Club: Boyer Moore String Search Algorithm": "https://www.raywenderlich.com/163964/swift-algorithm-club-booyer-moore-string-search-algorithm"
            - Greedy:
            - Dynamic Programming:
            - Bit Manipulation:
            - Recursion^:
            - Game Theory:
            - NP Complete:
            - Big-O notation^:
                - RESOURCES:
                    - Articles:
                        - "Big O notation": "https://en.wikipedia.org/wiki/Big_O_notation"
        - Abstract Data Types^:
            - Stack^:
            - Array^:
            - List^:
            - Map^:
            - Multimap:
            - Set^:
            - Multiset (Bag):
            - Graph^:
                - Tree:
            - Queue^:
            - Priority Queue:
            - Double-ended priority queue:
            - Double-ended queue:
        - System design^:
            - Problems:
                - RESOURCES:
                    - Articles:
                        - "Top 10 System Design Interview Questions for Software Engineers": "https://hackernoon.com/top-10-system-design-interview-questions-for-software-engineers-8561290f0444"
